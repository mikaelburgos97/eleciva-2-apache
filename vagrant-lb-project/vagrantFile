
# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  # Configuración común
  config.vm.box = "ubuntu/focal64"
  config.vm.provider "virtualbox" do |vb|
    vb.memory = "512"
    vb.cpus = 1
  end

  # Servidor web 1 (Apache)
  config.vm.define "web1" do |web1|
    web1.vm.hostname = "web1"
    web1.vm.network "private_network", ip: "192.168.33.11"
    
    # Configurar carpeta compartida
    web1.vm.synced_folder "./web1", "/var/www/html", create: true
    
    # Provisionar Apache
    web1.vm.provision "shell", inline: <<-SHELL
      apt-get update
      apt-get install -y apache2
      echo "<h1>Servidor Web 1</h1>" > /var/www/html/index.html
      systemctl enable apache2
      systemctl restart apache2
    SHELL
  end

  # Servidor web 2 (Apache)
  config.vm.define "web2" do |web2|
    web2.vm.hostname = "web2"
    web2.vm.network "private_network", ip: "192.168.33.12"
    
    # Configurar carpeta compartida
    web2.vm.synced_folder "./web2", "/var/www/html", create: true
    
    # Provisionar Apache
    web2.vm.provision "shell", inline: <<-SHELL
      apt-get update
      apt-get install -y apache2
      echo "<h1>Servidor Web 2</h1>" > /var/www/html/index.html
      systemctl enable apache2
      systemctl restart apache2
    SHELL
  end

  # Servidor de balanceo (Nginx)
  config.vm.define "lb" do |lb|
    lb.vm.hostname = "lb"
    lb.vm.network "private_network", ip: "192.168.33.10"
    
    # Provisionar Nginx con configuración de balanceo de carga
    lb.vm.provision "shell", inline: <<-SHELL
      apt-get update
      apt-get install -y nginx
      
      # Configurar Nginx para balanceo de carga
      cat > /etc/nginx/sites-available/default << 'EOL'
upstream backend {
    server 192.168.33.11;
    server 192.168.33.12;
}

server {
    listen 80;
    
    location / {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
EOL
      
      systemctl enable nginx
      systemctl restart nginx
    SHELL
  end
end